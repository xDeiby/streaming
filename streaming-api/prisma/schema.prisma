// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  streams   Stream[]
  messages  Message[]
  followers Follow[] @relation("Follower")
  following Follow[] @relation("Following")
  
  @@map("users")
}

model Follow {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String   @db.ObjectId
  followingId String   @db.ObjectId
  createdAt   DateTime @default(now())
  
  follower    User @relation("Follower", fields: [followerId], references: [id])
  following   User @relation("Following", fields: [followingId], references: [id])

  @@unique([followerId, followingId])
  @@map("follows")
}

model Stream {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  streamerId  String   @db.ObjectId
  viewers     Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isLive      Boolean  @default(false)
  hlsUrl      String?

  streamer    User     @relation(fields: [streamerId], references: [id])
  messages    Message[]

  @@map("streams")
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  streamId  String   @db.ObjectId
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())

  stream    Stream   @relation(fields: [streamId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@map("messages")
}
